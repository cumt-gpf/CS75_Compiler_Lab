### Starting build.
# Target: main.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules main.ml > main.ml.depends # cached
# Target: compile.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:compile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules compile.ml > compile.ml.depends
# Target: runner.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:runner.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules runner.ml > runner.ml.depends # cached
# Target: compile.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:compile.cmo, file:compile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o compile.cmo compile.ml
# Target: lexer.mll, tags: { package(oUnit,extlib,unix), extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet, traverse }
ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { package(oUnit,extlib,unix), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { package(oUnit,extlib,unix), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(oUnit,extlib,unix), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o parser.cmi parser.mli
# Target: lexer.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o lexer.cmo lexer.ml
# Target: runner.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:runner.cmo, file:runner.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o runner.cmo runner.ml
+ ocamlfind ocamlc -c -package oUnit,extlib,unix -o runner.cmo runner.ml
File "runner.ml", line 27, characters 15-36:
Warning 52: Code should not depend on the actual values of
this constructor's arguments. They are only for information
and may change in future versions. (See manual section 8.5)
# Target: main.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o main.cmo main.ml
# Target: compile.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:compile.cmx, file:compile.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o compile.cmx compile.ml
# Target: parser.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o parser.cmx parser.ml
# Target: lexer.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o lexer.cmx lexer.ml
# Target: runner.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:runner.cmx, file:runner.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o runner.cmx runner.ml
+ ocamlfind ocamlopt -c -package oUnit,extlib,unix -o runner.cmx runner.ml
File "runner.ml", line 27, characters 15-36:
Warning 52: Code should not depend on the actual values of
this constructor's arguments. They are only for information
and may change in future versions. (See manual section 8.5)
# Target: main.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o main.cmx main.ml
# Target: main.native, tags: { package(oUnit,extlib,unix), dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package oUnit,extlib,unix compile.cmx parser.cmx lexer.cmx runner.cmx main.cmx -o main.native
# Compilation successful.
